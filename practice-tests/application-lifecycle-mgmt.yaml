#https://kubernetes.io/docs/tasks/configure-pod-container/configure-pod-configmap/
#sample pod with command & it's arguments
apiVersion: v1
kind: Pod 
metadata:
  name: ubuntu-sleeper-2
spec:
  containers:
  - name: ubuntu
    image: ubuntu
    resources:
      limits:
        cpu: "500m"
        memory: "100Mi"
    command:
    - "sleep"
    - "5000"
---

#sample pod with command and args command <=> ENTRYPOINT, args<=> CMD
apiVersion: v1 
kind: Pod 
metadata:
  name: webapp-green
  labels:
      name: webapp-green 
spec:
  containers:
  - name: simple-webapp
    image: kodekloud/webapp-color
    command: ["python", "app.py"]
    args: ["--color", "pink"]
    resources:
      limits:
        cpu: "500m"
        memory: "100Mi"
---
#sample config map
apiVersion: v1
kind: CongifMap
metadata: 
  name: webapp-config-map
data:
  APP_COLOR: darkblue
  APP_OTHER: disregard
--- 

#sample secrets (dummy values)
apiVersion: v1
kind: Secret
metadata:
  name: db-secret
type: Opaque
data:
  DB_Host: c3FsMDEK
  DB_User: cm9vdAo=
  DB_Password: cGFzc3dvcmQxMjMK
---

#sample multi-container pod
apiVersion: v1
kind: Pod 
metadata: 
  name: yellow
spec:
  containers:
  - name: lemon
    image: busybox
    resources:
      limits:
        cpu: "500m"
        memory: "100Mi"
  - name: gold
    image: redis
    resources:
      limits:
        cpu: "500m"
        memory: "100Mi"
---
#sample init container
#init conatiners run sequentially one by one. main conatiners wait for init containers to complete 
apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: "2024-04-07T14:58:20Z"
  name: purple
  namespace: default
  resourceVersion: "883"
  uid: a496d635-f7ad-4ae8-893e-6bbc9393366b
spec:
  containers:
  - command:
    - sh
    - -c
    - echo The app is running! && sleep 3600
    image: busybox:1.28
    imagePullPolicy: IfNotPresent
    name: purple-container
    resources:
      limits:
        cpu: "500m"
        memory: "100Mi"
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-s2zc6
      readOnly: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  initContainers:
  - command:
    - sh
    - -c
    - sleep 600
    image: busybox:1.28
    imagePullPolicy: IfNotPresent
    name: warm-up-1
    resources: {}
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-s2zc6
      readOnly: true
  - command:
    - sh
    - -c
    - sleep 1200
    image: busybox:1.28
    imagePullPolicy: IfNotPresent
    name: warm-up-2
    resources: {}
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-s2zc6
      readOnly: true
  nodeName: controlplane
  preemptionPolicy: PreemptLowerPriority
  priority: 0
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext: {}
  serviceAccount: default
  serviceAccountName: default
  terminationGracePeriodSeconds: 30
  tolerations:
  - effect: NoExecute
    key: node.kubernetes.io/not-ready
    operator: Exists
    tolerationSeconds: 300
  - effect: NoExecute
    key: node.kubernetes.io/unreachable
    operator: Exists
    tolerationSeconds: 300
  volumes:
  - name: kube-api-access-s2zc6
    projected:
      defaultMode: 420
      sources:
      - serviceAccountToken:
          expirationSeconds: 3607
          path: token
      - configMap:
          items:
          - key: ca.crt
            path: ca.crt
          name: kube-root-ca.crt
      - downwardAPI:
          items:
          - fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
            path: namespace

    
